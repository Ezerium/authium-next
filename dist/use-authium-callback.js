"use client";

function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
import { useEffect, useState } from "react";
import { useAuthium } from "./authium-context";
import { useStorage } from "./storage";
export function useAuthiumCallback() {
  var _useAuthium = useAuthium(),
    save = _useAuthium.save;
  var _useState = useState(true),
    _useState2 = _slicedToArray(_useState, 2),
    loading = _useState2[0],
    setLoading = _useState2[1];
  var _useState3 = useState(null),
    _useState4 = _slicedToArray(_useState3, 2),
    error = _useState4[0],
    setError = _useState4[1];
  var storage = useStorage();
  useEffect(function () {
    var url = new URL(window.location.href);
    var accessToken = url.searchParams.get("access_token");
    var refreshToken = url.searchParams.get("refresh_token");
    var expiry = url.searchParams.get("expires_in");
    var state = url.searchParams.get("state");
    if (!accessToken || !refreshToken || !expiry || !state) {
      setError("Missing tokens in callback URL");
      setLoading(false);
      return;
    }
    var storedCsrf = storage.get("authium_csrf");
    storage.remove("authium_csrf");
    if (state !== storedCsrf) {
      setError("CSRF token mismatch");
      setLoading(false);
      return;
    }
    try {
      save(accessToken, refreshToken, Date.now() + Number(expiry) * 1000);
      setLoading(false);
    } catch (err) {
      setError(err.message || "Failed to save tokens");
      setLoading(false);
    }
  }, []);
  return {
    loading: loading,
    error: error
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc2xpY2VkVG9BcnJheSIsInIiLCJlIiwiX2FycmF5V2l0aEhvbGVzIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX25vbkl0ZXJhYmxlUmVzdCIsIlR5cGVFcnJvciIsImEiLCJfYXJyYXlMaWtlVG9BcnJheSIsInQiLCJ0b1N0cmluZyIsImNhbGwiLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsIkFycmF5IiwiZnJvbSIsInRlc3QiLCJsZW5ndGgiLCJuIiwibCIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiaSIsInUiLCJmIiwibyIsIm5leHQiLCJPYmplY3QiLCJkb25lIiwicHVzaCIsInZhbHVlIiwiaXNBcnJheSIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwidXNlQXV0aGl1bSIsInVzZVN0b3JhZ2UiLCJ1c2VBdXRoaXVtQ2FsbGJhY2siLCJfdXNlQXV0aGl1bSIsInNhdmUiLCJfdXNlU3RhdGUiLCJfdXNlU3RhdGUyIiwibG9hZGluZyIsInNldExvYWRpbmciLCJfdXNlU3RhdGUzIiwiX3VzZVN0YXRlNCIsImVycm9yIiwic2V0RXJyb3IiLCJzdG9yYWdlIiwidXJsIiwiVVJMIiwid2luZG93IiwibG9jYXRpb24iLCJocmVmIiwiYWNjZXNzVG9rZW4iLCJzZWFyY2hQYXJhbXMiLCJnZXQiLCJyZWZyZXNoVG9rZW4iLCJleHBpcnkiLCJzdGF0ZSIsInN0b3JlZENzcmYiLCJyZW1vdmUiLCJEYXRlIiwibm93IiwiTnVtYmVyIiwiZXJyIiwibWVzc2FnZSJdLCJzb3VyY2VzIjpbIi4uL2xpYi91c2UtYXV0aGl1bS1jYWxsYmFjay50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcblxyXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IHVzZUF1dGhpdW0gfSBmcm9tIFwiLi9hdXRoaXVtLWNvbnRleHRcIjtcclxuaW1wb3J0IHsgdXNlU3RvcmFnZSB9IGZyb20gXCIuL3N0b3JhZ2VcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VBdXRoaXVtQ2FsbGJhY2soKSB7XHJcbiAgICBjb25zdCB7IHNhdmUgfSA9IHVzZUF1dGhpdW0oKTtcclxuICAgIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xyXG4gICAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcclxuXHJcbiAgICBjb25zdCBzdG9yYWdlID0gdXNlU3RvcmFnZSgpO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XHJcbiAgICAgICAgY29uc3QgYWNjZXNzVG9rZW4gPSB1cmwuc2VhcmNoUGFyYW1zLmdldChcImFjY2Vzc190b2tlblwiKTtcclxuICAgICAgICBjb25zdCByZWZyZXNoVG9rZW4gPSB1cmwuc2VhcmNoUGFyYW1zLmdldChcInJlZnJlc2hfdG9rZW5cIik7XHJcbiAgICAgICAgY29uc3QgZXhwaXJ5ID0gdXJsLnNlYXJjaFBhcmFtcy5nZXQoXCJleHBpcmVzX2luXCIpO1xyXG4gICAgICAgIGNvbnN0IHN0YXRlID0gdXJsLnNlYXJjaFBhcmFtcy5nZXQoXCJzdGF0ZVwiKTtcclxuXHJcbiAgICAgICAgaWYgKCFhY2Nlc3NUb2tlbiB8fCAhcmVmcmVzaFRva2VuIHx8ICFleHBpcnkgfHwgIXN0YXRlKSB7XHJcbiAgICAgICAgICAgIHNldEVycm9yKFwiTWlzc2luZyB0b2tlbnMgaW4gY2FsbGJhY2sgVVJMXCIpO1xyXG4gICAgICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3Qgc3RvcmVkQ3NyZiA9IHN0b3JhZ2UuZ2V0KFwiYXV0aGl1bV9jc3JmXCIpO1xyXG4gICAgICAgIHN0b3JhZ2UucmVtb3ZlKFwiYXV0aGl1bV9jc3JmXCIpO1xyXG4gICAgICAgIGlmIChzdGF0ZSAhPT0gc3RvcmVkQ3NyZikge1xyXG4gICAgICAgICAgICBzZXRFcnJvcihcIkNTUkYgdG9rZW4gbWlzbWF0Y2hcIik7XHJcbiAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBzYXZlKGFjY2Vzc1Rva2VuLCByZWZyZXNoVG9rZW4sIERhdGUubm93KCkgKyBOdW1iZXIoZXhwaXJ5KSAqIDEwMDApO1xyXG4gICAgICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgICB9IGNhdGNoIChlcnI6IGFueSkge1xyXG4gICAgICAgICAgICBzZXRFcnJvcihlcnIubWVzc2FnZSB8fCBcIkZhaWxlZCB0byBzYXZlIHRva2Vuc1wiKTtcclxuICAgICAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSwgW10pO1xyXG5cclxuICAgIHJldHVybiB7IGxvYWRpbmcsIGVycm9yIH07XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUFDLFNBQUFBLGVBQUFDLENBQUEsRUFBQUMsQ0FBQSxXQUFBQyxlQUFBLENBQUFGLENBQUEsS0FBQUcscUJBQUEsQ0FBQUgsQ0FBQSxFQUFBQyxDQUFBLEtBQUFHLDJCQUFBLENBQUFKLENBQUEsRUFBQUMsQ0FBQSxLQUFBSSxnQkFBQTtBQUFBLFNBQUFBLGlCQUFBLGNBQUFDLFNBQUE7QUFBQSxTQUFBRiw0QkFBQUosQ0FBQSxFQUFBTyxDQUFBLFFBQUFQLENBQUEsMkJBQUFBLENBQUEsU0FBQVEsaUJBQUEsQ0FBQVIsQ0FBQSxFQUFBTyxDQUFBLE9BQUFFLENBQUEsTUFBQUMsUUFBQSxDQUFBQyxJQUFBLENBQUFYLENBQUEsRUFBQVksS0FBQSw2QkFBQUgsQ0FBQSxJ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